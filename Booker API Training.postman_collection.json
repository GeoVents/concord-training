{
	"info": {
		"_postman_id": "5298f338-4088-4e06-896f-dcde664b2bdb",
		"name": "Booker API Training",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26145009"
	},
	"item": [
		{
			"name": "Auth Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"pm.test(\"Confirm auth token creation\", function() {\r",
							"    pm.expect(response.token).to.not.be.empty\r",
							"});\r",
							"\r",
							"pm.environment.set(\"token\", response.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/auth",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking IDs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"pm.test(\"Get Booking IDs\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify bookingid 1 is in the list\"), function(){\r",
							"    pm.expect(response.bookingid).to.eql(1);\r",
							"};\r",
							"\r",
							"//pm.test(\"Verify there is a list with the IDs\"), function() {\r",
							"  //  pm.expect(response).to.have.property(bookingid);\r",
							"//};\r",
							"\r",
							"pm.test(\"Verify there is a list with the IDs\", function() {\r",
							"    response.forEach(function(item) {\r",
							"        pm.expect(item).to.have.property(\"bookingid\"); // Verify each object has the \"bookingid\" property\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseURL}}/booking",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create booking\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"pm.environment.set(\"bookingID\", response.bookingid);\r",
							"pm.environment.set(\"firstname\", response.booking.firstname);\r",
							"pm.environment.set(\"lastname\", response.booking.lastname);\r",
							"pm.environment.set(\"checkin\", response.booking.bookingdates.checkin);\r",
							"pm.environment.set(\"checkout\", response.booking.bookingdates.checkout);\r",
							"\r",
							"pm.test(\"Verify an ID is generated\", function() {\r",
							"    pm.expect(response.bookingid).to.not.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm there are checkin and checkout dates\", function() {\r",
							"    pm.expect(response.checkin).to.not.be.null\r",
							"    pm.expect(response.checkout).to.not.be.null\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Bay\",\r\n    \"lastname\" : \"Ganyo\",\r\n    \"totalprice\" : {{$randomPrice}},\r\n    \"depositpaid\" : false,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"1-01-2022\",\r\n        \"checkout\" : \"2-01-2022\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{baseURL}}/booking",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking IDs Filter by Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"pm.test(\"Get Booking IDs\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//pm.test(\"Verify there is a list with the IDs\"), function() {\r",
							"  //  pm.expect(response).to.have.property(bookingid);\r",
							"//};\r",
							"\r",
							"pm.test(\"Verify there is a list with the IDs\", function() {\r",
							"    response.forEach(function(item) {\r",
							"        pm.expect(item).to.have.property(\"bookingid\"); // Verify each object has the \"bookingid\" property\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseURL}}/booking?firstname={{firstname}}&lastname={{lastname}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "firstname",
							"value": "{{firstname}}"
						},
						{
							"key": "lastname",
							"value": "{{lastname}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking IDs Filter by Dates",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"pm.test(\"Get Booking IDs\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//pm.test(\"Verify there is a list with the IDs\"), function() {\r",
							"  //  pm.expect(response).to.have.property(bookingid);\r",
							"//};\r",
							"\r",
							"pm.test(\"Verify there is a list with the IDs\", function() {\r",
							"    response.forEach(function(item) {\r",
							"        pm.expect(item).to.have.property(\"bookingid\"); // Verify each object has the \"bookingid\" property\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseURL}}/booking?checkin={{checkin}}&checkout={{checkout}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "checkin",
							"value": "{{checkin}}"
						},
						{
							"key": "checkout",
							"value": "{{checkout}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Booking by ID\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"pm.test(\"Verify the booking names\", function() {\r",
							"    pm.expect(response.firstname).to.eql(\"Bay\");\r",
							"    pm.expect(response.lastname).to.eql(\"Ganyo\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that deposit is paid\", function() {\r",
							"    pm.expect(response.depositpaid).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/booking/:id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{bookingID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update booking\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"pm.test('Confirm editing is completed', function() {\r",
							"    pm.expect(response.firstname).to.eql(\"PUT\");\r",
							"    pm.expect(response.lastname).to.eql(\"METHOD\");\r",
							"    pm.expect(response.depositpaid).to.be.true\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"PUT\",\r\n    \"lastname\" : \"METHOD\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/booking/:id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{bookingID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial Update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Partial Update booking\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"pm.test('Confirm editing is completed', function() {\r",
							"    pm.expect(response.firstname).to.eql(\"PATCH\");\r",
							"    pm.expect(response.lastname).to.eql(\"METHOD\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"PATCH\",\r\n    \"lastname\" : \"METHOD\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/booking/:id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{bookingID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Booking Deleted\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/booking/:id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{bookingID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ping - Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Service is UP\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"//ChatGPT advised\r",
							"pm.test(\"Verify response time is within acceptable range\", function() {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify Content-Type header\", function() {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/ping",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		}
	]
}